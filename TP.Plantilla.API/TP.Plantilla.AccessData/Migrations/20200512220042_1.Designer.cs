// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP.Plantilla.AccessData;

namespace TP.Plantilla.AccessData.Migrations
{
    [DbContext(typeof(SystemContext))]
    [Migration("20200512220042_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TP.Plantilla.Domain.Entities.Carrito", b =>
                {
                    b.Property<int>("carritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("carritoProductoId")
                        .HasColumnType("int");

                    b.Property<int>("clienteId")
                        .HasColumnType("int");

                    b.HasKey("carritoId");

                    b.HasIndex("clienteId");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("TP.Plantilla.Domain.Entities.Carrito_Producto", b =>
                {
                    b.Property<int>("carrito_productoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("carritoId")
                        .HasColumnType("int");

                    b.HasKey("carrito_productoId");

                    b.HasIndex("carritoId")
                        .IsUnique();

                    b.ToTable("Carrito_Productos");
                });

            modelBuilder.Entity("TP.Plantilla.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("clienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("clienteId");

                    b.HasIndex("dni")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TP.Plantilla.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("productoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("carrito_productoId")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("productoId");

                    b.HasIndex("carrito_productoId");

                    b.HasIndex("codigo")
                        .IsUnique();

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("TP.Plantilla.Domain.Entities.Ventas", b =>
                {
                    b.Property<int>("ventasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("carritoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("ventasId");

                    b.HasIndex("carritoId")
                        .IsUnique();

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("TP.Plantilla.Domain.Entities.Carrito", b =>
                {
                    b.HasOne("TP.Plantilla.Domain.Entities.Cliente", "ClienteNavigator")
                        .WithMany()
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TP.Plantilla.Domain.Entities.Carrito_Producto", b =>
                {
                    b.HasOne("TP.Plantilla.Domain.Entities.Carrito", null)
                        .WithOne("carrito_ProductoNavigator")
                        .HasForeignKey("TP.Plantilla.Domain.Entities.Carrito_Producto", "carritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TP.Plantilla.Domain.Entities.Producto", b =>
                {
                    b.HasOne("TP.Plantilla.Domain.Entities.Carrito_Producto", null)
                        .WithMany("productoNavigator")
                        .HasForeignKey("carrito_productoId");
                });

            modelBuilder.Entity("TP.Plantilla.Domain.Entities.Ventas", b =>
                {
                    b.HasOne("TP.Plantilla.Domain.Entities.Carrito", "carritoNavigator")
                        .WithMany()
                        .HasForeignKey("carritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
